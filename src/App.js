// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";

function toggle(todo) {
  return {
          id: todo.id,
          name: todo.name,
          status: !todo.status
        };
}

function getName(todo) {
  return todo.name;
}

function getStatus(todo) {
  if (todo.status) {
    return "done";
  } else {
    return "active";
  }
}

var Todo = {
  toggle: toggle,
  getName: getName,
  getStatus: getStatus
};

function App$TodoItem(Props) {
  var onToggle = Props.onToggle;
  var todo = Props.todo;
  var onRemove = Props.onRemove;
  return React.createElement("li", undefined, todo.name, React.createElement("button", {
                  onClick: (function (param) {
                      return Curry._1(onToggle, undefined);
                    })
                }, getStatus(todo)), React.createElement("button", {
                  onClick: (function (param) {
                      return Curry._1(onRemove, undefined);
                    })
                }, "Remove"));
}

var TodoItem = {
  make: App$TodoItem
};

var defaultState_todos = [];

var defaultState = {
  todos: defaultState_todos,
  input: ""
};

function reducer(state, action) {
  if (typeof action === "number") {
    return {
            todos: state.todos.concat([{
                    id: Date.now(),
                    name: state.input,
                    status: false
                  }]),
            input: ""
          };
  }
  switch (action.TAG | 0) {
    case /* Remove */0 :
        var id = action.id;
        return {
                todos: state.todos.filter(function (param, i) {
                      return i !== id;
                    }),
                input: state.input
              };
    case /* Toggle */1 :
        var id$1 = action.id;
        return {
                todos: state.todos.map(function (todo, i) {
                      if (id$1 === i) {
                        return toggle(todo);
                      } else {
                        return todo;
                      }
                    }),
                input: state.input
              };
    case /* InputChange */2 :
        return {
                todos: state.todos,
                input: action.value
              };
    
  }
}

function App$App(Props) {
  var match = React.useReducer(reducer, defaultState);
  var dispatch = match[1];
  var match$1 = match[0];
  return React.createElement(React.Fragment, undefined, React.createElement("input", {
                  value: match$1.input,
                  onChange: (function ($$event) {
                      var value = $$event.target.value;
                      return Curry._1(dispatch, {
                                  TAG: /* InputChange */2,
                                  value: value
                                });
                    })
                }), React.createElement("button", {
                  onClick: (function (param) {
                      return Curry._1(dispatch, /* Add */0);
                    })
                }, "Create"), React.createElement("ol", undefined, match$1.todos.map(function (todo, i) {
                      return React.createElement(App$TodoItem, {
                                  onToggle: (function (param) {
                                      return Curry._1(dispatch, {
                                                  TAG: /* Toggle */1,
                                                  id: i
                                                });
                                    }),
                                  todo: todo,
                                  onRemove: (function (param) {
                                      return Curry._1(dispatch, {
                                                  TAG: /* Remove */0,
                                                  id: i
                                                });
                                    }),
                                  key: i.toString()
                                });
                    })));
}

var App = {
  defaultState: defaultState,
  reducer: reducer,
  make: App$App
};

export {
  Todo ,
  TodoItem ,
  App ,
  
}
/* react Not a pure module */
